---
description: 
globs: 
alwaysApply: true
---
## Main tech stack
- Nextjs v15
- React v19
- tailwindcss v4
- Tanstack query (react-query)
- shadcn/ui (components)
- TRPC v11 (serverless functions/backend)
- prisma orm (postgres)

## Folder Structure Meta
. // project root
├─ prisma  // prisma schema and migrations
├─ public  // images and other static files
│  └─ favicon.ico
├─ src
│  ├─ app  // nextjs app router
│  │  ├─ api
│  │  │  ├─ auth
│  │  │  │  └─ [...nextauth]
│  │  │  │     └─ route.ts
│  │  │  └─ trpc
│  │  │     └─ [trpc]
│  │  │        └─ route.ts
│  │  ├─ layout.tsx  // root layout
│  │  └─ page.tsx  // default route
│  ├─ components
│  │  ├─ ui // shadcn/ui and other generic ui components
│  │  ├─ <feature-name> // complex features should be grouped together in a folder
│  │  └─ component-name.tsx // feature specific components that can be contained in a single file without exceeding 500 lines
│  ├─ data // static data such as social media links, resume data, or other constants
│  ├─ server // server only code, can not be referenced (imported) directly by frontend/client code. 
│  │  ├─ auth.ts // next-auth server config
│  │  ├─ db.ts // prisma-global server instance
│  │  └─ api
│  │     ├─ routers
│  │     │  └─ example.ts // trpc routers to handle serverless backend logic
│  │     ├─ trpc.ts
│  │     └─ root.ts // trpc routers need to be added to the root to be useable in the frontend
│  ├─ styles
│  │  └─ globals.css // tailwind v4 based style config
│  ├─ env.js
│  └─ trpc
│     ├─ query-client.ts
│     ├─ react.tsx
│     └─ server.ts
├─ .env
├─ .env.example
├─ .gitignore
├─ eslint.config.js
├─ next-env.d.ts
├─ next.config.js
├─ package.json
├─ postcss.config.js
├─ README.md
└─ tsconfig.json